# from aiogram import Bot, Dispatcher, types
# from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
# from aiogram.filters import Command 
# import asyncio

# BOT_TOKEN = "7582616773:AAGM6Da_CC650WEtp2QyvwGxndfyGemK9MA"
# bot = Bot(token=BOT_TOKEN)

# dp = Dispatcher()

# keyboard = ReplyKeyboardMarkup(
#     keyboard = [
#         [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç"), KeyboardButton(text="–ü–æ–∫–∞")],
#         [KeyboardButton(text="–û –ø–æ–≥–æ–¥–µ"), KeyboardButton(text="–ù–æ–≤–æ—Å—Ç–∏")]
#     ],
#         resize_keyboard=True
# )

# @dp.message(Command("start"))
# async def start_handler(message:types.Message):
#     await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:",reply_markup=keyboard)

# @dp.message()
# async def handler_buttons(message:Message):
#     if message.text == "–ü—Ä–∏–≤–µ—Ç":
#         await message.answer("–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å")
#     elif message.text == "–ü–æ–∫–∞":
#         await message.answer("–î–æ—Å–≤–∏–¥–∞–Ω–∏—è –±—É–¥–µ–º –∂–¥–∞—Ç—å –≤–∞—Å —Å–Ω–æ–≤–∞")
#     elif message.text == "–û –ø–æ–≥–æ–¥–µ":
#         await message.answer("–°–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞ –¥–æ–∂–¥–ª–∏–≤–∞—è, +10–°")
#     elif message.text == "–ù–æ–≤–æ—Å—Ç–∏":
#         await message.answer("–ü—Ä–∏–±–ª–∏–∂–∞–µ—Ç—å—Å—è –∫—Ä–∞—Ç–∫–æ –≤—Ä–µ–º–µ–Ω—ã–µ –¥–æ–∂–¥–∏!")
#     else:
#         await message.answer("–í—ã –≤–µ–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –≤–µ—Å—Ç–∏")

# async def main():
#     await dp.start_polling(bot)
# if __name__ == "__main__":
#     asyncio.run(main())

from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command 
import asyncio, logging
import random
import datetime

logging.basicConfig(level=logging.INFO)

BOT_TOKEN = "7582616773:AAGM6Da_CC650WEtp2QyvwGxndfyGemK9MA"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

keyboard = ReplyKeyboardMarkup(
    keyboard = [
        [KeyboardButton(text="–ß—Ç–æ —ç—Ç–æ?"),KeyboardButton(text="–ö—Ç–æ —Å–æ–∑–¥–∞–ª —ç—Ç–æ?")],
        [KeyboardButton(text="–ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ"),KeyboardButton(text="help")],
        [KeyboardButton(text="–†–∞–Ω–¥–æ–º–Ω–∞—è —Ü–∏—Ñ—Ä–∞ –æ—Ç (1-30)"),KeyboardButton(text="–†–∞–Ω–¥–æ–º–Ω—ã–π —Å–º–∞–π–ª–∏–∫")],
        [KeyboardButton(text="–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç"),KeyboardButton(text="–í—Ä–µ–º—è —Å—É—Ç–æ–∫")],
    ],
    resize_keyboard=True
)

@dp.message(Command("start"))
async def start_handler(message:Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç —è –≤—Ç–æ—Ä–æ–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

@dp.message()
async def handler_buttons(message:Message):
    if message.text == "–ß—Ç–æ —ç—Ç–æ?":
        await message.answer("–ß–∞—Ç –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç")
    elif message.text == "–ü—Ä–∏–≤–µ—Ç—Å–≤–∏–µ":
         await message.answer("–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ —è –±–æ—Ç –Ω–∞ –∞–π–æ–≥—Ä–∞–º–µ")
    # elif message.text == "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ üò≤":
    #     random_user = random.randint(1,100)
    #     await message.answer(f"–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ:{random_user}")
    elif message.text == "–ö—Ç–æ —Å–æ–∑–¥–∞–ª —ç—Ç–æ?":
        await message.answer("–≠—Ç–æ–≥–æ –±–æ—Ç–∞ —Å–æ–∑–¥–∞–ª Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫")
    elif message.text == "help":
        await message.answer("–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–µ—Ä–∂–∫—É")
    elif message.text == "–†–∞–Ω–¥–æ–º–Ω–∞—è —Ü–∏—Ñ—Ä–∞ –æ—Ç (1-30)":
         random_user = random.randint(1,30)
         await message.answer(f"–í–∞—à–µ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ:{random_user}")
    elif message.text == "–†–∞–Ω–¥–æ–º–Ω—ã–π —Å–º–∞–π–ª–∏–∫":
         smile = ["ü§£","ü´¢"]
         smile_random = random.choice(smile)
         await message.answer(f"–í–∞—à —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Å–º–∞–π–ª–∏–∫ {smile_random}")
    elif message.text == "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç":
         fakt = ["–£—Ç–∫–∏ –º–æ–≥—É—Ç —Å–ø–∞—Ç—å —Å –æ–¥–Ω–∏–º –æ—Ç–∫—Ä—ã—Ç—ã–º –≥–ª–∞–∑–æ–º ","–õ—å–≤—ã —Å–ø—è—Ç –¥–æ 20 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å","–î–µ–ª—å—Ñ–∏–Ω—ã –¥–∞—é—Ç —Å–µ–±–µ –∏–º–µ–Ω–∞"]
         random_fakt = random.choice(fakt)
         await message.answer(f"–§–∞–∫—Ç: {random_fakt}")
    elif message.text == "–í—Ä–µ–º—è —Å—É—Ç–æ–∫":
         user_data = datetime.datetime.now()
         await message.answer(f"–í—Ä–µ–º—è: {user_data}")
    else:
        await message.answer("–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é")

async def main():
        await dp.start_polling(bot)
if __name__=='__main__':
    try:
         asyncio.run(main())
    except KeyboardInterrupt:
        print('–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞.')


# –ë—É—Ç—É–ø –∞–π—Ç—Å–∞–Ω —Ç—É—à—É–Ω–¥—É—Ä–æ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–Ω–∏